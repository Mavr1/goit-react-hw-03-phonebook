{"version":3,"sources":["components/section/Section.js","components/input/Input.js","components/button/Button.js","components/addContactform/AddContactform.js","components/filter/Filter.js","components/contacts/Contacts.js","services/storageService.js","services/helpers.js","App.js","index.js"],"names":["Section","name","children","Input","value","label","type","placeholder","onChange","id","shortid","generate","htmlFor","defaultProps","Button","onClick","clsn","className","initialState","number","AddContactform","state","handleInput","e","setState","target","handleSubmit","preventDefault","newContact","trim","props","addContact","this","Component","Filter","Contacts","contacts","handleClick","map","item","key","storageApi","localStorage","getItem","JSON","parse","setItem","stringify","filterArrayDelete","array","filter","App","prevState","undefined","find","newContacts","alert","handleFilter","handleDelete","console","log","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75ee08d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Section = ({ name, children }) => (\n  <section>\n    {name && <h2>{name}</h2>}\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport shortid from 'shortid';\n\nconst Input = ({ value, label, type, name, placeholder, onChange }) => {\n  const id = shortid.generate();\n  return (\n    <>\n      <label htmlFor={id}>{label}</label>\n      <input\n        id={id}\n        value={value}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Button = ({ name, type, onClick, clsn }) => {\n  return (\n    <button className={clsn} type={type} onClick={onClick}>\n      {name}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  type: 'button',\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Input from '../input/Input';\nimport Button from '../button/Button';\nimport shortid from 'shortid';\n\nconst initialState = { name: '', number: '' };\n\nclass AddContactform extends Component {\n  state = { name: '', number: '' };\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    if (this.state.name.trim()) {\n      this.props.addContact(newContact);\n    }\n    this.setState(initialState);\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          value={this.state.name}\n          label=\"Name\"\n          name=\"name\"\n          onChange={this.handleInput}\n        />\n        <Input\n          value={this.state.number}\n          label=\"Number\"\n          name=\"number\"\n          onChange={this.handleInput}\n        />\n        <Button name=\"Add contact\" type=\"submit\" onClick={this.handleSubmit} />\n      </form>\n    );\n  }\n}\n\nexport default AddContactform;\n","import React from 'react';\nimport Input from '../input/Input';\n\nconst Filter = ({ onChange }) => (\n  <Input label=\"Find contacts by name\" onChange={onChange} name=\"filter\" />\n);\n\nexport default Filter;\n","import React from 'react';\nimport shortid from 'shortid';\nimport Button from '../button/Button';\n\nconst Contacts = ({ contacts, handleClick }) => {\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map((item) => {\n        const onClick = () => handleClick(item.id);\n        return (\n          <li key={shortid.generate()}>\n            <span className=\"contactName\">{item.name}</span>\n            <span className=\"contactNumber\">{item.number}</span>\n            <Button name=\"Delete\" clsn=\"btnDelete\" onClick={onClick} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","export const storageApi = {\r\n  getAllContacts(key) {\r\n    const value = localStorage.getItem(key);\r\n    const parsedValue = JSON.parse(value);\r\n    return parsedValue;\r\n  },\r\n\r\n  updateContacts(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  },\r\n};\r\n","export const filterContacts = (array, value) =>\r\n  array.filter((item) => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\r\nexport const filterArrayDelete = (array, id) =>\r\n  array.filter((item) => {\r\n    return item.id !== id;\r\n  });\r\n","import React, { Component } from 'react';\nimport Section from './components/section/Section';\nimport AddContactform from './components/addContactform/AddContactform';\nimport Filter from './components/filter/Filter';\nimport Contacts from './components/contacts/Contacts';\nimport { storageApi } from './services/storageService';\nimport { filterContacts } from './services/helpers';\nimport { filterArrayDelete } from './services/helpers';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: null,\n  };\n\n  componentDidMount() {\n    const contacts = storageApi.getAllContacts('contacts');\n    console.log(contacts);\n    contacts !== null && contacts.length > 0 && this.setState({ contacts });\n  }\n\n  addContact = (newContact) =>\n    this.setState((prevState) => {\n      if (\n        prevState.contacts.find((item) => item.name === newContact.name) ===\n        undefined\n      ) {\n        const newContacts = [...prevState.contacts, newContact];\n        storageApi.updateContacts('contacts', newContacts);\n        return { contacts: newContacts };\n      } else {\n        alert(`${newContact.name} already exists in contacts`);\n      }\n    });\n\n  handleFilter = (e) => this.setState({ filter: e.target.value });\n\n  handleDelete = (id) => {\n    this.setState((state) => {\n      const contacts = filterArrayDelete(state.contacts, id);\n      storageApi.updateContacts('contacts', contacts);\n      return {\n        contacts,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Section>\n          <AddContactform addContact={this.addContact} />\n        </Section>\n        <Section name=\"Contacts\">\n          {this.state.contacts.length > 1 && (\n            <Filter onChange={this.handleFilter} />\n          )}\n          <Contacts\n            contacts={\n              this.state.filter !== null\n                ? filterContacts(this.state.contacts, this.state.filter)\n                : this.state.contacts\n            }\n            handleClick={this.handleDelete}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}